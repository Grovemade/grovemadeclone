'use strict';

angular.module('grovemade', ['ui.router']).config(function ($stateProvider, $urlRouterProvider) {

  $urlRouterProvider.otherwise('/');

  $stateProvider.state('home', {
    url: '/',
    templateUrl: './templates/home.html',
    controller: 'homeCtrl'
  }).state('shop', {
    url: '/shop',
    templateUrl: './templates/shop.html',
    controller: 'shopCtrl'
  }).state('about', {
    url: '/about',
    templateUrl: './templates/about.html',
    controller: 'aboutCtrl'
  }).state('journal', {
    url: '/journal',
    templateUrl: './templates/journal.html',
    controller: 'journalCtrl'
  });
});
'use strict';

angular.module('grovemade').controller('aboutCtrl', function ($scope, homeSrvc, $stateParams) {

  homeSrvc.getAboutPage().then(function (response) {
    $scope.employees = response.data;
    console.log('CTRL', $scope.employees);
  });
});
'use strict';

angular.module('grovemade').controller('carouselCtrl', function ($scope) {});
'use strict';

angular.module('grovemade').controller('homeCtrl', function ($scope, $stateParams, $interval, $timeout) {
  $scope.myInterval = 3000;
  var index = -1;
  $scope.slides = [{
    image: '/img/homemarq-walnut-desk-collection-G2_1.jpg',
    title: 'DESK COLLECTION',
    color: 'IN WALNUT OR MAPLE'
  }, {
    image: '/img/homemarq-watch-02-A3_1.jpg',
    title: 'WOOD WATCH',
    color: 'MODEL 02'
  }, {
    image: '/img/homemarq-wallet-A4_1.jpg',
    title: 'EVERYDAY CARRY',
    color: 'COLLECTION'
  }, {
    image: '/img/homemarq-wallet-case-A2_1.jpg',
    title: 'WALLET CASE',
    color: 'FOR iPHONE 6 & 7'
  }, {
    image: '/img/homemarq-wood-iphone-6-case-B2_1.jpg',
    title: 'iPHONE   7 CASES',
    color: 'IN WALNUT OR MAPLE'

  }, {
    image: '/img/homemarq-bifold-wallet-E1_1.jpg',
    title: 'BIFOLD WALLET',
    color: 'IN BLACK OR TAN'
  }, {
    image: '/img/homemarq-wood-speakers-A1_2.jpg',
    title: 'WOOD SPEAKERS',
    color: 'IN WALNUT OR MAPLE'
  }];
  $scope.photoClass = [];
  var timer = $interval(function () {
    $scope.next();
  }, 5000);
  $scope.stop = function () {
    $interval.cancel(timer);
  };
  $scope.next = function () {
    index++;
    if (index > 6) {
      index = 0;
    }
    $scope.nextPhoto = $scope.slides[index].image;
    $scope.nextTitle = $scope.slides[index].title;
    $scope.nextColor = $scope.slides[index].color;

    $scope.photoClass.splice(0, 1, 'animated fadeOut');
    $timeout(function () {
      $scope.photoClass.splice(0, 1, 'animated fadeIn');
      $scope.selected = $scope.slides[index].image;
      $scope.title = $scope.slides[index].title;
      $scope.color = $scope.slides[index].color;
    }, 500);
  };

  $scope.previous = function () {
    index--;
    if (index < 0) {
      index = 6;
    }
    $scope.nextPhoto = $scope.slides[index].image;
    $scope.nextTitle = $scope.slides[index].title;
    $scope.nextColor = $scope.slides[index].color;

    $scope.photoClass.splice(0, 1, 'animated fadeOut');
    $timeout(function () {
      $scope.photoClass.splice(0, 1, 'animated fadeIn');
      $scope.selected = $scope.slides[index].image;
      $scope.title = $scope.slides[index].title;
      $scope.color = $scope.slides[index].color;
    }, 500);
  };
  $scope.next();
});
'use strict';

angular.module('grovemade').controller('journalCtrl', function ($scope, homeSrvc, $stateParams) {

  homeSrvc.getJournal().then(function (response) {
    $scope.journal = response.data;
    console.log('CTRL', $scope.journal);
  });
  // upon hover, the selected index is pushing the animate.css  fade to the covering array
  $scope.covering = [];
  $scope.onHover = function (i) {
    $scope.selected = i;
    $scope.covering.push('cover animated fadeIn2');
  };
  // upon mouse leave, the selected index we are on will take away the animate.css
  $scope.onLeave = function (i) {
    $scope.selected = i;
    $scope.covering.splice(0);
  };
});
'use strict';

angular.module('grovemade').controller('shopCtrl', function ($scope, homeSrvc, $stateParams) {

  homeSrvc.getShop().then(function (response) {
    $scope.products = response.data;
    console.log('CTRL', $scope.products);
  });
});
'use strict';

angular.module('grovemade').directive('customfooter', function () {
  return {
    templateUrl: './templates/footer.html'
  };
});
"use strict";
'use strict';

angular.module('grovemade').directive('navbar', function () {
  return {
    templateUrl: './templates/navbar.html',
    controller: function controller($state, $rootScope) {
      $(document).ready(function () {
        $('.nav').removeClass('sticky-nav');
        var scroll_pos = 0;
        $(document).scroll(function () {
          scroll_pos = $(this).scrollTop();
          if (scroll_pos > 20) {
            $('.nav').addClass('sticky-nav');
          } else {
            $('.nav').removeClass('sticky-nav');
          }
        });
      });

      // var isActive = false;

      $('.newsletter-open').on('click', function () {
        // isActive = !isActive;
        // if (isActive) {
        // console.log(isActive);
        $('.newsletter-wrapper').removeClass('hide-newsletter');
        // } else {
        // $('.newsletter-wrapper').addClass('hide-newsletter');
        // }
      });

      $('.newsletter-close').on('click', function () {
        // isActive = !isActive;
        // if (!isActive) {
        $('.newsletter-wrapper').addClass('hide-newsletter');
        // } else {
        // $('.newsletter-wrapper').removeClass('hide-newsletter');
        // }
      });

      $('.nav-cart').on('mouseover', function () {
        $('.sticky-cart').fadeIn();
      });
      $('.sticky-cart').mouseleave(function () {
        $('.sticky-cart').fadeOut();
      });
    } //end of controller
  };
});
'use strict';

angular.module('grovemade').service('homeSrvc', function ($http) {

  this.getShop = function () {
    return $http({
      method: 'GET',
      url: '/shop'
    }).then(function (response) {
      console.log('SRVC', response);
      return response;
    });
  };

  this.getAboutPage = function () {
    return $http({
      method: 'GET',
      url: '/about'
    }).then(function (response) {
      console.log('SRVC', response);
      return response;
    });
  };

  this.getJournal = function () {
    return $http({
      method: 'GET',
      url: '/journal'
    }).then(function (response) {
      console.log('SRVC', response);
      return response;
    });
  };
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL2Fib3V0Q3RybC5qcyIsImNvbnRyb2xsZXJzL2Nhcm91c2VsQ3RybC5qcyIsImNvbnRyb2xsZXJzL2hvbWVDdHJsLmpzIiwiY29udHJvbGxlcnMvam91cm5hbEN0cmwuanMiLCJjb250cm9sbGVycy9zaG9wQ3RybC5qcyIsImRpcmVjdGl2ZXMvZm9vdGVyLmpzIiwiZGlyZWN0aXZlcy9ob21lRGlyZWN0aXZlLmpzIiwiZGlyZWN0aXZlcy9uYXZiYXIuanMiLCJzZXJ2aWNlcy9ob21lU2VydmljZS5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIiRzY29wZSIsImhvbWVTcnZjIiwiJHN0YXRlUGFyYW1zIiwiZ2V0QWJvdXRQYWdlIiwidGhlbiIsInJlc3BvbnNlIiwiZW1wbG95ZWVzIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCIkaW50ZXJ2YWwiLCIkdGltZW91dCIsIm15SW50ZXJ2YWwiLCJpbmRleCIsInNsaWRlcyIsImltYWdlIiwidGl0bGUiLCJjb2xvciIsInBob3RvQ2xhc3MiLCJ0aW1lciIsIm5leHQiLCJzdG9wIiwiY2FuY2VsIiwibmV4dFBob3RvIiwibmV4dFRpdGxlIiwibmV4dENvbG9yIiwic3BsaWNlIiwic2VsZWN0ZWQiLCJwcmV2aW91cyIsImdldEpvdXJuYWwiLCJqb3VybmFsIiwiY292ZXJpbmciLCJvbkhvdmVyIiwiaSIsInB1c2giLCJvbkxlYXZlIiwiZ2V0U2hvcCIsInByb2R1Y3RzIiwiZGlyZWN0aXZlIiwiJHN0YXRlIiwiJHJvb3RTY29wZSIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwicmVtb3ZlQ2xhc3MiLCJzY3JvbGxfcG9zIiwic2Nyb2xsIiwic2Nyb2xsVG9wIiwiYWRkQ2xhc3MiLCJvbiIs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O0FBQ3RCLFdBQU95QixNQUFNO0FBQ1hDLGNBQVEsS0FERztBQUVYMUQsV0FBSztBQUZNLEtBQU4sRUFHSk8sSUFISSxDQUdDLFVBQUNDLFFBQUQsRUFBYztBQUNwQkcsY0FBUUMsR0FBUixDQUFZLE1BQVosRUFBb0JKLFFBQXBCO0FBQ0EsYUFBT0EsUUFBUDtBQUNELEtBTk0sQ0FBUDtBQU9ELEdBUkQ7QUFVRCxDQWhDRCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnZ3JvdmVtYWRlJywgWyd1aS5yb3V0ZXInXSlcbi5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcil7XG5cbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpXG5cbiAgJHN0YXRlUHJvdmlkZXJcbiAgLnN0YXRlKCdob21lJywge1xuICAgIHVybDonLycsXG4gICAgdGVtcGxhdGVVcmw6Jy4vdGVtcGxhdGVzL2hvbWUuaHRtbCcsXG4gICAgY29udHJvbGxlcjonaG9tZUN0cmwnXG4gIH0pXG5cbiAgLnN0YXRlKCdzaG9wJywge1xuICAgIHVybDonL3Nob3AnLFxuICAgIHRlbXBsYXRlVXJsOicuL3RlbXBsYXRlcy9zaG9wLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6J3Nob3BDdHJsJ1xuICB9KVxuXG4gIC5zdGF0ZSgnYWJvdXQnLCB7XG4gICAgdXJsOicvYWJvdXQnLFxuICAgIHRlbXBsYXRlVXJsOicuL3RlbXBsYXRlcy9hYm91dC5odG1sJyxcbiAgICBjb250cm9sbGVyOidhYm91dEN0cmwnXG4gIH0pXG5cbiAgLnN0YXRlKCdqb3VybmFsJywge1xuICAgIHVybDonL2pvdXJuYWwnLFxuICAgIHRlbXBsYXRlVXJsOicuL3RlbXBsYXRlcy9qb3VybmFsLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6J2pvdXJuYWxDdHJsJ1xuICB9KVxuXG5cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnZ3JvdmVtYWRlJylcbi5jb250cm9sbGVyKCdhYm91dEN0cmwnLCAoJHNjb3BlLCBob21lU3J2YywgJHN0YXRlUGFyYW1zKSA9PiB7XG5cbiAgaG9tZVNydmMuZ2V0QWJvdXRQYWdlKCkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAkc2NvcGUuZW1wbG95ZWVzID0gcmVzcG9uc2UuZGF0YTtcbiAgICBjb25zb2xlLmxvZygnQ1RSTCcsICRzY29wZS5lbXBsb3llZXMpO1xuICB9KVxuXG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdncm92ZW1hZGUnKVxuLmNvbnRyb2xsZXIoJ2Nhcm91c2VsQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSl7XG5cblxuXG5cbiAgICB9KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2dyb3ZlbWFkZScpXG4uY29udHJvbGxlcignaG9tZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZVBhcmFtcywgJGludGVydmFsLCAkdGltZW91dCl7XG4gICAgJHNjb3BlLm15SW50ZXJ2YWwgPSAzMDAwO1xuICAgIHZhciBpbmRleCA9IC0xO1xuICAgICRzY29wZS5zbGlkZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGltYWdlOiAnL2ltZy9ob21lbWFycS13YWxudXQtZGVzay1jb2xsZWN0aW9uLUcyXzEuanBnJyxcbiAgICAgICAgdGl0bGU6ICdERVNLIENPTExFQ1RJT04nLFxuICAgICAgICBjb2xvcjogJ0lOIFdBTE5VVCBPUiBNQVBMRSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGltYWdlOiAnL2ltZy9ob21lbWFycS13YXRjaC0wMi1BM18xLmpwZycsXG4gICAgICAgIHRpdGxlOiAnV09PRCBXQVRDSCcsXG4gICAgICAgIGNvbG9yOiAnTU9ERUwgMDInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogJy9pbWcvaG9tZW1hcnEtd2FsbGV0LUE0XzEuanBnJyxcbiAgICAgICAgdGl0bGU6ICdFVkVSWURBWSBDQVJSWScsXG4gICAgICAgIGNvbG9yOiAnQ09MTEVDVElPTidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGltYWdlOiAnL2ltZy9ob21lbWFycS13YWxsZXQtY2FzZS1BMl8xLmpwZycsXG4gICAgICAgIHRpdGxlOiAnV0FMTEVUIENBU0UnLFxuICAgICAgICBjb2xvcjogJ0ZPUiBpUEhPTkUgNiAmIDcnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogJy9pbWcvaG9tZW1hcnEtd29vZC1pcGhvbmUtNi1jYXNlLUIyXzEuanBnJyxcbiAgICAgICAgdGl0bGU6ICdpUEhPTkUgICA3IENBU0VTJyxcbiAgICAgICAgY29sb3I6ICdJTiBXQUxOVVQgT1IgTUFQTEUnXG5cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGltYWdlOiAnL2ltZy9ob21lbWFycS1iaWZvbGQtd2FsbGV0LUUxXzEuanBnJyxcbiAgICAgICAgdGl0bGU6ICdCSUZPTEQgV0FMTEVUJyxcbiAgICAgICAgY29sb3I6ICdJTiBCTEFDSyBPUiBUQU4nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbWFnZTogJy9pbWcvaG9tZW1hcnEtd29vZC1zcGVha2Vycy1BMV8yLmpwZycsXG4gICAgICAgIHRpdGxlOiAnV09PRCBTUEVBS0VSUycsXG4gICAgICAgIGNvbG9yOiAnSU4gV0FMTlVUIE9SIE1BUExFJ1xuICAgICAgfVxuICAgIF07XG4gICAgJHNjb3BlLnBob3RvQ2xhc3MgPSBbXVxuICAgIHZhciB0aW1lciA9ICRpbnRlcnZhbChmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLm5leHQoKVxuICAgIH0sIDUwMDApXG4gICAgJHNjb3BlLnN0b3AgPSBmdW5jdGlvbigpe1xuICAgICAgJGludGVydmFsLmNhbmNlbCh0aW1lcilcbiAgICB9XG4gICAgJHNjb3BlLm5leHQgPSBmdW5jdGlvbigpe1xuICAgICAgaW5kZXgrK1xuICAgICAgaWYoaW5kZXggPiA2KXtcbiAgICAgICAgaW5kZXggPSAwXG4gICAgICB9XG4gICAgICAkc2NvcGUubmV4dFBob3RvID0gJHNjb3BlLnNsaWRlc1tpbmRleF0uaW1hZ2VcbiAgICAgICRzY29wZS5uZXh0VGl0bGUgPSAkc2NvcGUuc2xpZGVzW2luZGV4XS50aXRsZVxuICAgICAgJHNjb3BlLm5leHRDb2xvciA9ICRzY29wZS5zbGlkZXNbaW5kZXhdLmNvbG9yXG5cbiAgICAgICRzY29wZS5waG90b0NsYXNzLnNwbGljZSgwLCAxLCAnYW5pbWF0ZWQgZmFkZU91dCcpXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAkc2NvcGUucGhvdG9DbGFzcy5zcGxpY2UoMCwgMSwgJ2FuaW1hdGVkIGZhZGVJbicpXG4gICAgICAgICRzY29wZS5zZWxlY3RlZCA9ICRzY29wZS5zbGlkZXNbaW5kZXhdLmltYWdlXG4gICAgICAgICRzY29wZS50aXRsZSA9ICRzY29wZS5zbGlkZXNbaW5kZXhdLnRpdGxlXG4gICAgICAgICRzY29wZS5jb2xvciA9ICRzY29wZS5zbGlkZXNbaW5kZXhdLmNvbG9yXG4gICAgICB9LCA1MDApXG4gICAgfVxuXG4gICAgJHNjb3BlLnByZXZpb3VzID0gZnVuY3Rpb24oKXtcbiAgICAgIGluZGV4LS1cbiAgICAgIGlmKGluZGV4IDwgMCl7XG4gICAgICAgIGluZGV4ID0gNlxuICAgICAgfVxuICAgICAgJHNjb3BlLm5leHRQaG90byA9ICRzY29wZS5zbGlkZXNbaW5kZXhdLmltYWdlXG4gICAgICAkc2NvcGUubmV4dFRpdGxlID0gJHNjb3BlLnNsaWRlc1tpbmRleF0udGl0bGVcbiAgICAgICRzY29wZS5uZXh0Q29sb3IgPSAkc2NvcGUuc2xpZGVzW2luZGV4XS5jb2xvclxuXG4gICAgICAkc2NvcGUucGhvdG9DbGFzcy5zcGxpY2UoMCwgMSwgJ2FuaW1hdGVkIGZhZGVPdXQnKVxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgJHNjb3BlLnBob3RvQ2xhc3Muc3BsaWNlKDAsIDEsICdhbmltYXRlZCBmYWRlSW4nKVxuICAgICAgICAkc2NvcGUuc2VsZWN0ZWQgPSAkc2NvcGUuc2xpZGVzW2luZGV4XS5pbWFnZVxuICAgICAgICAkc2NvcGUudGl0bGUgPSAkc2NvcGUuc2xpZGVzW2luZGV4XS50aXRsZVxuICAgICAgICAkc2NvcGUuY29sb3IgPSAkc2NvcGUuc2xpZGVzW2luZGV4XS5jb2xvclxuICAgICAgfSwgNTAwKVxuICAgIH1cbiAgICAkc2NvcGUubmV4dCgpXG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdncm92ZW1hZGUnKVxuLmNvbnRyb2xsZXIoJ2pvdXJuYWxDdHJsJywgKCRzY29wZSwgaG9tZVNydmMsICRzdGF0ZVBhcmFtcykgPT4ge1xuXG5cbiAgaG9tZVNydmMuZ2V0Sm91cm5hbCgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgJHNjb3BlLmpvdXJuYWwgPSByZXNwb25zZS5kYXRhO1xuICAgIGNvbnNvbGUubG9nKCdDVFJMJywgJHNjb3BlLmpvdXJuYWwpO1xuICB9KVxuICAvLyB1cG9uIGhvdmVyLCB0aGUgc2VsZWN0ZWQgaW5kZXggaXMgcHVzaGluZyB0aGUgYW5pbWF0ZS5jc3MgIGZhZGUgdG8gdGhlIGNvdmVyaW5nIGFycmF5XG4kc2NvcGUuY292ZXJpbmcgPSBbXVxuJHNjb3BlLm9uSG92ZXIgPSBmdW5jdGlvbihpKXtcbiAgJHNjb3BlLnNlbGVjdGVkID0gaVxuICAkc2NvcGUuY292ZXJpbmcucHVzaCgnY292ZXIgYW5pbWF0ZWQgZmFkZUluMicpXG59XG4vLyB1cG9uIG1vdXNlIGxlYXZlLCB0aGUgc2VsZWN0ZWQgaW5kZXggd2UgYXJlIG9uIHdpbGwgdGFrZSBhd2F5IHRoZSBhbmltYXRlLmNzc1xuJHNjb3BlLm9uTGVhdmUgPSBmdW5jdGlvbihpKXtcbiAgJHNjb3BlLnNlbGVjdGVkID0gaVxuICAkc2NvcGUuY292ZXJpbmcuc3BsaWNlKDApXG59XG5cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2dyb3ZlbWFkZScpXG4uY29udHJvbGxlcignc2hvcEN0cmwnLCAoJHNjb3BlLCBob21lU3J2YywgJHN0YXRlUGFyYW1zKSA9PiB7XG5cbiAgaG9tZVNydmMuZ2V0U2hvcCgpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgJHNjb3BlLnByb2R1Y3RzID0gcmVzcG9uc2UuZGF0YTtcbiAgICBjb25zb2xlLmxvZygnQ1RSTCcsICRzY29wZS5wcm9kdWN0cyk7XG4gIH0pXG5cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2dyb3ZlbWFkZScpLmRpcmVjdGl2ZSgnY3VzdG9tZm9vdGVyJywgKCkgPT4ge1xuICByZXR1cm4oe1xuICAgIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZXMvZm9vdGVyLmh0bWwnLFxuICB9KVxuXG5cblxufSlcbiIsIlxuIiwiYW5ndWxhci5tb2R1bGUoJ2dyb3ZlbWFkZScpLmRpcmVjdGl2ZSgnbmF2YmFyJywgKCkgPT4ge1xuICByZXR1cm57XG4gICAgdGVtcGxhdGVVcmw6ICcuL3RlbXBsYXRlcy9uYXZiYXIuaHRtbCcsXG4gICAgY29udHJvbGxlcjogZnVuY3Rpb24oJHN0YXRlLCAkcm9vdFNjb3BlKXtcbiAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XG4gICAgICAgICQoJy5uYXYnKS5yZW1vdmVDbGFzcygnc3RpY2t5LW5hdicpO1xuICAgICAgICB2YXIgc2Nyb2xsX3BvcyA9IDA7XG4gICAgICAgICQoZG9jdW1lbnQpLnNjcm9sbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNjcm9sbF9wb3MgPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xuICAgICAgICAgICAgaWYoc2Nyb2xsX3BvcyA+IDIwKSB7XG4gICAgICAgICAgICAgICQoJy5uYXYnKS5hZGRDbGFzcygnc3RpY2t5LW5hdicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgJCgnLm5hdicpLnJlbW92ZUNsYXNzKCdzdGlja3ktbmF2Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIHZhciBpc0FjdGl2ZSA9IGZhbHNlO1xuXG4gICAgICAkKCcubmV3c2xldHRlci1vcGVuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIGlzQWN0aXZlID0gIWlzQWN0aXZlO1xuICAgICAgXHQvLyBpZiAoaXNBY3RpdmUpIHtcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhpc0FjdGl2ZSk7XG4gICAgICAgICAgJCgnLm5ld3NsZXR0ZXItd3JhcHBlcicpLnJlbW92ZUNsYXNzKCdoaWRlLW5ld3NsZXR0ZXInKTtcbiAgICAgIFx0Ly8gfSBlbHNlIHtcbiAgICAgIFx0XHQvLyAkKCcubmV3c2xldHRlci13cmFwcGVyJykuYWRkQ2xhc3MoJ2hpZGUtbmV3c2xldHRlcicpO1xuICAgICAgXHQvLyB9XG5cbiAgICAgIH0pO1xuXG4gICAgICAkKCcubmV3c2xldHRlci1jbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBpc0FjdGl2ZSA9ICFpc0FjdGl2ZTtcbiAgICAgIFx0Ly8gaWYgKCFpc0FjdGl2ZSkge1xuICAgICAgICAgICQoJy5uZXdzbGV0dGVyLXdyYXBwZXInKS5hZGRDbGFzcygnaGlkZS1uZXdzbGV0dGVyJyk7XG4gICAgICBcdC8vIH0gZWxzZSB7XG4gICAgICBcdFx0Ly8gJCgnLm5ld3NsZXR0ZXItd3JhcHBlcicpLnJlbW92ZUNsYXNzKCdoaWRlLW5ld3NsZXR0ZXInKTtcbiAgICAgIFx0Ly8gfVxuICAgICAgfSk7XG5cbiAgICAgICQoJy5uYXYtY2FydCcpLm9uKCdtb3VzZW92ZXInLGZ1bmN0aW9uKCl7XG4gICAgICAgICQoJy5zdGlja3ktY2FydCcpLmZhZGVJbigpO1xuICAgICAgfSlcbiAgICAgICQoJy5zdGlja3ktY2FydCcpLm1vdXNlbGVhdmUoZnVuY3Rpb24oKXtcbiAgICAgICAgJCgnLnN0aWNreS1jYXJ0JykuZmFkZU91dCgpO1xuICAgICAgfSlcblxuICAgIH0vL2VuZCBvZiBjb250cm9sbGVyXG4gIH07XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdncm92ZW1hZGUnKS5zZXJ2aWNlKCdob21lU3J2YycsIGZ1bmN0aW9uKCRodHRwKSB7XG5cbiAgdGhpcy5nZXRTaG9wID0gKCkgPT4ge1xuICAgIHJldHVybiAkaHR0cCh7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiAnL3Nob3AnXG4gICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdTUlZDJywgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0pO1xuICB9O1xuXG4gIHRoaXMuZ2V0QWJvdXRQYWdlID0gKCkgPT4ge1xuICAgIHJldHVybiAkaHR0cCh7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiAnL2Fib3V0J1xuICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnU1JWQycsIHJlc3BvbnNlKTtcbiAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9KTtcbiAgfTtcblxuICB0aGlzLmdldEpvdXJuYWwgPSAoKSA9PiB7XG4gICAgcmV0dXJuICRodHRwKHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICB1cmw6ICcvam91cm5hbCdcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ1NSVkMnLCByZXNwb25zZSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSk7XG4gIH07XG5cbn0pO1xuIl19
